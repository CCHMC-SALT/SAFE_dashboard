---
title: "Cincinnati Meal Gap"
format:
  html:
    page-layout: full
---

```{r}
#| echo: false
#| message: false
library(tidyverse)
library(ggiraph)

dat <- read_csv('output/monthly_all_sources_.csv')

d <- dat |> 
  filter(SNA_NAME %in% c('Avondale', 'East Price Hill', 'West Price Hill')) |> 
  select(neighborhood = 'SNA_NAME', month, year, contains('covered')) |> 
  mutate(month = as.numeric(month)) |> 
  mutate(month_abbr = month.abb[month])

d$date <- as.Date(paste(d$year, d$month, 1, sep = "-"))

d <- d |> 
  pivot_longer(cols = contains('covered'), names_to = 'source', values_to = 'pct_covered') |> 
  filter(source != 'charitable_percent_covered')

```

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 7


d$source <- factor(d$source, levels = c("meal_percent_income_covered",
                                        "meal_percent_snap_covered",
                                        "meal_percent_cps_covered",
                                        "meal_percent_fsb_covered",
                                        "meal_percent_lasoupe_covered",
                                        "meal_percent_whole_again_covered"),
                   labels = c("Income",
                              "SNAP",
                              "CPS",
                              "Free Store Foodbank",
                              "La Soupe",
                              "Whole Again"))

meal_gap_plot <- ggplot(d, aes(fill = source, y = pct_covered, x = date)) +
  geom_hline(yintercept = 1, linewidth = .5, alpha = .5) +
  geom_bar_interactive(position = "stack", stat = "identity",
                       aes(data_id = neighborhood,
                           tooltip = paste0(source, "<br>", 
                                            month_abbr, " ", year, "<br>",
                                            round(pct_covered,1)*100, "%"))) +
  theme_minimal() +
  ggsci::scale_fill_jama(breaks = c(
    "SNAP",
    "Income",
    "CPS",
    "Free Store Foodbank",
    "La Soupe",
    "Whole Again")) +
  labs(x = "", y = "Meal Coverage (% Meals Covered)", fill = "Meal Source") +
  scale_y_continuous(labels = scales::percent) +
  scale_x_date(date_breaks = "6 months", date_labels = "%b %Y") +
  #ggeasy::easy_move_legend("top") +
  facet_wrap(~neighborhood, nrow = 3)

girafe(ggobj = meal_gap_plot, width_svg = 10, height_svg = 7,
                        options = list(opts_hover(css = "stroke-width:5;"),
                                      opts_hover_inv(css = "opacity:0.2;"),
                                      opts_zoom(max = 5)))


```

```{r}
#| echo: false
#| fig-width: 10
#| fig-height: 7
#| fig-cap: Points appearing in the green section, with values less than zero, indicate a meal surplus for that month

d_2 <- d |> 
  pivot_wider(names_from = 'source', values_from = 'pct_covered') |> 
  rowwise() |> 
  mutate(meal_gap = 1 - sum(Income, SNAP, CPS, `Free Store Foodbank`, `La Soupe`, `Whole Again`)) |> 
  ungroup()

gap_over_time <- ggplot(d_2, aes(x = date, y = meal_gap, col = neighborhood)) +
  geom_line_interactive(aes(data_id = neighborhood, group = neighborhood)) +
  geom_point_interactive(#position = "dodge",
                       aes(data_id = neighborhood, group = neighborhood, 
                            tooltip = paste(month_abbr, " ", year, "<br>",
                                            round(meal_gap,2)*100, "%"))) +
  geom_hline(yintercept = 0, linewidth = .5) +
  scale_y_reverse(labels = scales::percent) +
  theme_minimal() +
  ggsci::scale_color_aaas() +
  labs(x = "", y = "Meal Gap (% Meals Short)", col = "Neighborhood") +
  scale_x_date(date_breaks = "6 months", date_labels = "%b %Y") +
  #ggeasy::easy_move_legend("top") +
  annotate("rect", xmin = as.Date("2018-12-15", "%Y-%m-%d"), xmax = as.Date("2022-10-01", "%Y-%m-%d"),
                ymin = -.06, ymax = -0.0001, fill = "forestgreen", alpha = .2) +
  annotate("rect", xmin = as.Date("2018-12-15", "%Y-%m-%d"), xmax = as.Date("2022-10-01", "%Y-%m-%d"),
                ymin = 0.0001, ymax = .20, fill = "firebrick", alpha = .2) 

girafe(ggobj = gap_over_time, width_svg = 10, height_svg = 7,
                        options = list(opts_hover(css = "stroke-width:5;"),
                                      opts_hover_inv(css = "opacity:0.1;"),
                                      opts_zoom(max = 5)))

```

